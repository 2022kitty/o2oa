MWF.xApplication.cms.ColumnManager=MWF.xApplication.cms.ColumnManager||{};MWF.xApplication.cms.ColumnManager.Actions=MWF.xApplication.cms.ColumnManager.Actions||{};MWF.xDesktop.requireApp("cms.ColumnManager","package",null,false);MWF.require("MWF.xDesktop.Actions.RestActions",null,false);MWF.require("MWF.widget.UUID",null,false);MWF.xApplication.cms.ColumnManager.Actions.RestActions=new Class({initialize:function(){this.action=new MWF.xDesktop.Actions.RestActions("/Actions/action.json","x_cms_assemble_control","x_component_cms_ColumnManager")},getId:function(e,i,a,t){this.action.invoke({name:"getId",async:t,parameter:{count:e},success:i,failure:a})},getUUID:function(e){var i="";this.action.invoke({name:"getId",async:false,parameter:{count:"1"},success:function(a){i=a.data[0];if(e)e(i)},failure:null});return i},listColumn:function(e,i,a){this.action.invoke({name:"listColumn",async:a,success:e,failure:i})},getColumn:function(e,i,a){this.action.invoke({name:"getColumn",parameter:{id:e.id},success:i,failure:a})},saveColumn:function(e,i,a){if(!e.isNewColumn){this.updateColumn(e,i,a)}else{this.addColumn(e,i,a)}},addColumn:function(e,i,a){this.action.invoke({name:"addColumn",data:e,success:i,failure:a})},updateColumn:function(e,i,a){this.action.invoke({name:"updateColumn",data:e,parameter:{id:e.id},success:i,failure:a})},removeColumn:function(e,i,a,t){this.action.invoke({name:"removeColumn",async:t,parameter:{id:e},success:i,failure:a})},getColumnIcon:function(e,i,a){this.action.invoke({name:"getColumnIcon",parameter:{id:e},success:i,failure:a})},updataColumnIcon:function(e,i,a,t,n){this.action.invoke({name:"updataColumnIcon",parameter:{id:e},data:t,file:n,success:i,failure:a})},listAllCategory:function(e,i,a){this.action.invoke({name:"listAllCategory",async:a,success:e,failure:i})},listCategory:function(e,i,a,t){var n=this;this.action.invoke({name:"listCategory",parameter:{appId:e},async:t,success:function(e){n.transCategoryData(e);i.call(this,e)},failure:a})},getCategory:function(e,i,a){var t=this;this.action.invoke({name:"getCategory",parameter:{id:e},success:function(e){t.transCategoryData(e);i.call(this,e)},failure:a})},saveCategory:function(e,i,a){if(!e.isNew){this.updateCategory(e,i,a)}else{this.addCategory(e,i,a)}},addCategory:function(e,i,a){this.action.invoke({name:"addCategory",data:e,success:i,failure:a})},updateCategory:function(e,i,a){this.action.invoke({name:"updateCategory",data:e,parameter:{id:e.id},success:i,failure:a})},removeCategory:function(e,i,a,t){this.action.invoke({name:"removeCategory",async:t,parameter:{id:e},success:i,failure:a})},transCategoryData:function(e){var i=function(e){if(!e.name)e.name=e.catagoryName;if(!e.alias)e.alias=e.catagoryAlias;if(!e.catagoryName)e.catagoryName=e.name;if(!e.catagoryAlias)e.catagoryAlias=e.alias};if(e.data){if(typeOf(e.data)=="array"){e.data.each(function(e){i(e)})}else{i(e.data)}}else{e.data=[]}},listAllForm:function(e,i,a){this.action.invoke({name:"listAllForm",async:a,success:e,failure:i})},listForm:function(e,i,a,t){this.action.invoke({name:"listForm",async:t,parameter:{appId:e},success:i,failure:a})},getForm:function(e,i,a,t){this.action.invoke({name:"getForm",async:t,parameter:{id:e},success:i,failure:a})},saveForm:function(e,i,a,t){if(!e.isNewForm){this.updateForm(e,i,a,t)}else{this.addForm(e,i,a,t)}},updateForm:function(e,i,a,t){var n,i;if(e)n=MWF.encodeJsonString(JSON.encode(e));if(i)i=MWF.encodeJsonString(JSON.encode(i));var s={id:e.json.id,name:e.json.name,alias:e.json.name,description:e.json.description,appId:e.json.application};if(e)s.data=n;if(i)s.mobileData=i;this.action.invoke({name:"updataForm",data:s,parameter:{id:e.json.id},success:a,failure:t})},addForm:function(e,i,a,t){var n,i;if(!e.json.id){this.getUUID(function(s){e.json.id=s;if(e)n=MWF.encodeJsonString(JSON.encode(e));if(i)i=MWF.encodeJsonString(JSON.encode(i));var o={id:e.json.id,name:e.json.name,alias:e.json.name,description:e.json.description,appId:e.json.application};if(e)o.data=n;if(i)o.mobileData=i;this.action.invoke({name:"addForm",data:o,parameter:{id:e.json.id},success:a,failure:t})}.bind(this))}else{if(e)n=MWF.encodeJsonString(JSON.encode(e));if(i)i=MWF.encodeJsonString(JSON.encode(i));var s={id:e.json.id,name:e.json.name,alias:e.json.name,description:e.json.description,appId:e.json.application};if(e)s.data=n;if(i)s.mobileData=i;this.action.invoke({name:"addForm",data:s,parameter:{id:e.json.categoryId},success:a,failure:t})}},deleteForm:function(e,i,a,t){this.action.invoke({name:"removeForm",async:t,parameter:{id:e},success:i,failure:a})},listDictionary:function(e,i,a,t){this.action.invoke({name:"listDictionary",async:t,parameter:{appId:e},success:i,failure:a})},getDictionary:function(e,i,a,t){this.action.invoke({name:"getDictionary",async:t,parameter:{appDictId:e},success:i,failure:a})},saveDictionary:function(e,i,a){if(e.id||e.appDictId){this.updateDictionary(e,i,a)}else{this.addDictionary(e,i,a)}},updateDictionary:function(e,i,a){if(!e.alias||e.alias=="")e.alias=e.name;this.action.invoke({name:"updataDictionary",data:e,parameter:{appDictId:e.id},success:i,failure:a})},addDictionary:function(e,i,a){if(!e.id){this.getUUID(function(t){e.id=t;e.appDictId=t;if(!e.alias||e.alias=="")e.alias=e.name;this.action.invoke({name:"addDictionary",data:e,parameter:{appDictId:e.id},success:i,failure:a})}.bind(this))}},deleteDictionary:function(e,i,a,t){this.action.invoke({name:"removeDictionary",async:t,parameter:{appDictId:e},success:i,failure:a})},listScript:function(e,i,a,t){var n=this;this.action.invoke({name:"listScript",async:t,parameter:{appId:e},success:i,failure:a})},getScript:function(e,i,a,t){var n=this;this.action.invoke({name:"getScript",async:t,parameter:{id:e},success:function(e){n.transScriptData(e);i.call(this,e)},failure:a})},getScriptByName:function(e,i,a,t,n){var s=this;this.action.invoke({name:"getScriptByName",async:n,parameter:{name:e,appId:i},success:function(e){s.transScriptData(e);a.call(this,e)},failure:t})},saveScript:function(e,i,a){if(!e.isNewScript){this.updateScript(e,i,a)}else{this.addScript(e,i,a)}},updateScript:function(e,i,a){this.transScriptData(e,"send");this.action.invoke({name:"updataScript",data:e,parameter:{id:e.id},success:i,failure:a})},addScript:function(e,i,a){this.transScriptData(e,"send");var t=this;if(!e.id){this.getUUID(function(t){e.id=t;this.action.invoke({name:"addScript",data:e,success:i,failure:a})}.bind(this))}else{this.action.invoke({name:"addScript",data:e,success:i,failure:a})}},deleteScript:function(e,i,a,t){this.action.invoke({name:"removeScript",async:t,parameter:{id:e},success:i,failure:a})},transScriptData:function(e,i){var a=function(e){if(i&&i=="send"){if(!e.appId)e.appId=e.application;if(!e.appName)e.appName=e.applicationName;if(e.application)delete e.application;if(e.applicationName)delete e.applicationName}else{if(!e.appId)e.appId=e.application;if(!e.appName)e.appName=e.applicationName;if(!e.application)e.application=e.appId;if(!e.applicationName)e.application=e.appName}};if(typeOf(e)=="array"){e.each(function(e){a(e)})}else{a(e)}},listController:function(e,i,a,t,n){this.action.invoke({name:"listController",async:n,parameter:{person:e,objectType:i},success:a,failure:t})},listAllController:function(e,i,a){this.action.invoke({name:"listAllController",async:a,success:e,failure:i})},listCategoryController:function(e,i,a,t){this.action.invoke({name:"listCategoryController",async:t,parameter:{catagoryId:e},success:i,failure:a})},listColumnController:function(e,i,a,t){this.action.invoke({name:"listColumnController",async:t,parameter:{appId:e},success:i,failure:a})},listControllerByPerson:function(e,i,a,t){this.action.invoke({name:"listControllerByPerson",async:t,parameter:{person:e},success:i,failure:a})},getController:function(e,i,a,t){this.action.invoke({name:"getController",async:t,parameter:{appDictId:appDictId},success:i,failure:a})},saveController:function(e,i,a,t){if(e.id){this.updateController(e,i,a,t)}else{this.addController(e,i,a,t)}},updateController:function(e,i,a,t){this.action.invoke({name:"updateController",async:t,data:e,parameter:{id:e.id},success:i,failure:a})},addController:function(e,i,a,t){if(!e.id){this.getUUID(function(n){e.id=n;this.action.invoke({name:"addController",async:t,data:e,parameter:{id:e.id},success:i,failure:a})}.bind(this))}},removeController:function(e,i,a,t){this.action.invoke({name:"removeController",async:t,parameter:{id:e},success:i,failure:a})},listPermission:function(e,i,a,t,n){this.action.invoke({name:"listPermission",async:n,parameter:{person:e,objectType:i},success:a,failure:t})},listAllPermission:function(e,i,a){this.action.invoke({name:"listAllPermission",async:a,success:e,failure:i})},listColumnPermission:function(e,i,a,t){this.action.invoke({name:"listColumnPermission",async:t,parameter:{appId:e},success:i,failure:a})},listPermissionByPerson:function(e,i,a,t){this.action.invoke({name:"listPermissionByPerson",async:t,parameter:{person:e},success:i,failure:a})},getPermission:function(e,i,a,t){this.action.invoke({name:"getPermission",async:t,parameter:{appDictId:appDictId},success:i,failure:a})},savePermission:function(e,i,a,t){if(e.id){this.updatePermission(e,i,a,t)}else{this.addPermission(e,i,a,t)}},updatePermission:function(e,i,a,t){this.action.invoke({name:"updatePermission",data:e,parameter:{id:e.id},async:t,success:i,failure:a})},addPermission:function(e,i,a,t){if(!e.id){this.getUUID(function(n){e.id=n;this.action.invoke({name:"addPermission",data:e,parameter:{id:e.id},async:t,success:i,failure:a})}.bind(this))}},removePermission:function(e,i,a,t){this.action.invoke({name:"removePermission",async:t,parameter:{id:e},success:i,failure:a})},listView:function(e,i,a,t){this.action.invoke({name:"listView",async:t,parameter:{appId:e},success:i,failure:a})},listViewByCategory:function(e,i,a,t){this.action.invoke({name:"listViewByCategory",async:t,parameter:{catagoryId:e},success:i,failure:a})},listViewByForm:function(e,i,a,t){this.action.invoke({name:"listViewByForm",async:t,parameter:{formId:e},success:i,failure:a})},getView:function(e,i,a){this.action.invoke({name:"getView",parameter:{id:e},success:i,failure:a})},saveView:function(e,i,a){if(!e.isNew){this.updateView(e,i,a)}else{this.addView(e,i,a)}},addView:function(e,i,a){this.action.invoke({name:"addView",data:e,success:i,failure:a})},updateView:function(e,i,a){this.action.invoke({name:"updateView",data:e,parameter:{id:e.id},success:i,failure:a})},deleteView:function(e,i,a,t){this.action.invoke({name:"deleteView",async:t,parameter:{id:e},success:i,failure:a})},listViewColumn:function(e,i,a,t){this.action.invoke({name:"listViewColumn",async:t,parameter:{viewId:e},success:i,failure:a})},getViewColumn:function(e,i,a){this.action.invoke({name:"getViewColumn",parameter:{id:e},success:i,failure:a})},saveViewColumn:function(e,i,a,t){if(!e.isNew){this.updateViewColumn(e,i,a,t)}else{this.addViewColumn(e,i,a,t)}},addViewColumn:function(e,i,a,t){this.action.invoke({name:"addViewColumn",async:t,data:e,success:i,failure:a})},updateViewColumn:function(e,i,a,t){this.action.invoke({name:"updateViewColumn",async:t,data:e,parameter:{id:e.id},success:i,failure:a})},deleteViewColumn:function(e,i,a,t){this.action.invoke({name:"deleteViewColumn",async:t,parameter:{id:e},success:i,failure:a})},listCategoryViewByView:function(e,i,a,t){this.action.invoke({name:"listCategoryViewByView",async:t,parameter:{viewId:e},success:i,failure:a})},listCategoryViewByCatagory:function(e,i,a,t){this.action.invoke({name:"listCategoryViewByCatagory",async:t,parameter:{catagoryId:e},success:i,failure:a})},getCategoryView:function(e,i,a){this.action.invoke({name:"getCategoryView",parameter:{id:e},success:i,failure:a})},saveCategoryView:function(e,i,a,t){if(!e.isNew){this.updateViewColumn(e,i,a,t)}else{this.addViewColumn(e,i,a,t)}},addCategoryView:function(e,i,a,t){this.action.invoke({name:"addCategoryView",async:t,data:e,success:i,failure:a})},updateCategoryView:function(e,i,a,t){this.action.invoke({name:"updateCategoryView",async:t,data:e,parameter:{id:e.id},success:i,failure:a})},deleteCategoryView:function(e,i,a,t){this.action.invoke({name:"deleteCategoryView",async:t,parameter:{id:e},success:i,failure:a})},listQueryView:function(e,i,a,t){this.action.invoke({name:"listQueryView",async:t,parameter:{applicationId:e},success:i,failure:a})},listQueryViewNextPage:function(e,i,a,t,n){this.action.invoke({name:"listQueryViewNextPage",async:n,parameter:{id:e,count:i},success:a,failure:t})},listQueryViewPrevPage:function(e,i,a,t,n){this.action.invoke({name:"listQueryViewPrevPage",async:n,parameter:{id:e,count:i},success:a,failure:t})},getQueryView:function(e,i,a){this.action.invoke({name:"getQueryView",parameter:{id:e},success:i,failure:a})},saveQueryView:function(e,i,a,t){if(e.isNewView){e.isNewView=false;this.addQueryView(e,i,a,t)}else{this.updateQueryView(e,i,a,t)}},addQueryView:function(e,i,a,t){var n=e.data;var s=JSON.encode(e.data);e.data=s;if(!n.id){this.getUUID(function(s){e.id=s;this.action.invoke({name:"addQueryView",data:e,success:i,failure:a,async:t});e.data=n}.bind(this))}else{this.action.invoke({name:"addQueryView",data:e,success:i,failure:a,async:t});e.data=n}},updateQueryView:function(e,i,a,t){var n=e.data;var s=JSON.encode(e.data);e.data=s;this.action.invoke({name:"updateQueryView",data:e,async:t,parameter:{id:e.id},success:i,failure:a});e.data=n},deleteQueryView:function(e,i,a,t){this.action.invoke({name:"deleteQueryView",async:t,parameter:{id:e},success:i,failure:a})},getQueryViewContent:function(e,i,a,t){this.action.invoke({name:"getQueryViewContent",async:t,parameter:{flag:e},success:i,failure:a})},loadQueryView:function(e,i,a,t){this.action.invoke({name:"loadQueryView",async:t,data:{},parameter:{flag:e},success:i,failure:a})}});