MWF.xApplication.process.FormDesigner.Module=MWF.xApplication.process.FormDesigner.Module||{};MWF.xDesktop.requireApp("process.FormDesigner","Module.$Element",null,false);MWF.xApplication.process.FormDesigner.Module.Label=MWF.FCLabel=new Class({Extends:MWF.FC$Element,Implements:[Options,Events],options:{style:"default",propertyPath:"/x_component_process_FormDesigner/Module/Label/label.html"},initialize:function(e,t){debugger;this.setOptions(t);this.path="/x_component_process_FormDesigner/Module/Label/";this.cssPath="/x_component_process_FormDesigner/Module/Label/"+this.options.style+"/css.wcss";this._loadCss();this.moduleType="element";this.moduleName="label";this.form=e;this.container=null;this.containerNode=null},clearTemplateStyles:function(e){if(this.json.templateType){if(e){if(e[this.json.templateType]){if(e[this.json.templateType].styles)this.removeStyles(e[this.json.templateType].styles,"styles");if(e[this.json.templateType].inputStyles)this.removeStyles(e[this.json.templateType].inputStyles,"inputStyles");if(e[this.json.templateType].properties)this.removeStyles(e[this.json.templateType].properties,"properties")}}}},setTemplateStyles:function(e){if(this.json.templateType){if(e[this.json.templateType].styles)this.copyStyles(e[this.json.templateType].styles,"styles");if(e[this.json.templateType].properties)this.copyStyles(e[this.json.templateType].properties,"properties")}},_createMoveNode:function(){this.moveNode=new Element("div",{MWFType:"label",id:this.json.id,styles:this.css.moduleNodeMove,text:"(T)Text",events:{selectstart:function(){return false}}}).inject(this.form.container)},_setEditStyle_custom:function(e,t,s){debugger;if(e=="valueType"||e=="text"){if(this.json.valueType=="text"){if(this.json.text){this.node.set("text",this.json.text)}else{this.node.set("text","(T)Text")}}else{this.node.set("text","(C)Text")}}if(e=="templateType"){if(this.form.templateStyles){var i=this.form.templateStyles[this.moduleName];if(i){if(s){if(i[s]){this.removeStyles(i[s].styles,"styles");this.removeStyles(i[s].styles,"properties")}}if(i[this.json.templateType].styles)this.copyStyles(i[this.json.templateType].styles,"styles");if(i[this.json.templateType].styles)this.copyStyles(i[this.json.templateType].properties,"properties");this.setPropertiesOrStyles("styles");this.setPropertiesOrStyles("properties");this.reloadMaplist()}}}}});