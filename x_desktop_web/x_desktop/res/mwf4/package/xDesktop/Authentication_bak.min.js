MWF.xDesktop=MWF.xDesktop||{};MWF.xApplication=MWF.xApplication||{};MWF.require("MWF.xDesktop.Actions.RestActions",null,false);MWF.xDesktop.Authentication=new Class({Extends:MWF.widget.Common,Implements:[Options,Events],options:{style:"default"},initialize:function(t){this.setOptions(t);this.action=new MWF.xDesktop.Actions.RestActions("/xDesktop/Actions/action.json","x_organization_assemble_authentication");this.path=MWF.defaultPath+"/xDesktop/$Authentication/";this.cssPath=MWF.defaultPath+"/xDesktop/$Authentication/"+this.options.style+"/css.wcss";this._loadCss()},isAuthenticated:function(t,i){this.action.getAuthentication(t,i)},loadLogin:function(t){this.loginNode=new Element("div",{styles:this.css.loginNode});this.loginAreaNode=new Element("div",{styles:this.css.loginAreaNode}).inject(this.loginNode);this.loginTitleNode=new Element("div",{styles:this.css.loginTitleNode,text:MWF.LP.desktop.login.title}).inject(this.loginAreaNode);this.loginUserNode=new Element("div",{styles:this.css.loginUserNode}).inject(this.loginAreaNode);this.userInput=new Element("input",{styles:this.css.loginInputNode,type:"text",value:"Username"}).inject(this.loginUserNode);this.loginPassNode=new Element("div",{styles:this.css.loginPassNode}).inject(this.loginAreaNode);this.passInput=new Element("input",{styles:this.css.loginInputNode,type:"password",value:"Password"}).inject(this.loginPassNode);this.loginButtonNode=new Element("button",{styles:this.css.loginButtonNode,text:MWF.LP.desktop.login.loginButton}).inject(this.loginAreaNode);this.loginInforNode=new Element("div",{styles:this.css.loginInforNode}).inject(this.loginAreaNode);this.setEvent();this.show(t)},setEvent:function(){this.userInput.addEvents({focus:function(){if(this.get("value")=="Username")this.set("value","")},blur:function(){if(!this.get("value"))this.set("value","Username")},keydown:function(t){if(t.code==13)this.passInput.focus()}.bind(this)});this.passInput.addEvents({focus:function(){if(this.get("value")=="Password")this.set("value","")},blur:function(){if(!this.get("value"))this.set("value","Password")},keydown:function(t){if(t.code==13)this.login()}.bind(this)});this.loginButtonNode.addEvents({click:function(){this.login()}.bind(this)})},show:function(t){this.loginNode.inject(t);var i=this.loginNode.getSize();var s=t.getSize();var e=0-i.y;var n=(s.x-i.x)/2;var o=(s.y-i.y)/2;this.loginNode.setStyles({top:""+e+"px",left:""+n+"px"});this.loginNode.set("morph",{duration:600,transition:Fx.Transitions.Elastic.easeOut});this.loginNode.morph({top:""+o+"px"})},errorEffect:function(){var t=this.loginNode.getPosition().x.toInt();new Fx.Morph(this.loginNode,{duration:20}).start({left:t-8}).chain(function(){new Fx.Morph(this.loginNode,{duration:20}).start({left:t+8}).chain(function(){new Fx.Morph(this.loginNode,{duration:10}).start({left:t-4}).chain(function(){new Fx.Morph(this.loginNode,{duration:10}).start({left:t+4}).chain(function(){new Fx.Morph(this.loginNode,{duration:10}).start({left:t}).chain(function(){}.bind(this))}.bind(this))}.bind(this))}.bind(this))}.bind(this))},login:function(){debugger;var t=this.userInput.get("value");var i=this.passInput.get("value");if(!t||!i){this.loginInforNode.set("text",MWF.LP.desktop.login.inputUsernamePassword);this.errorEffect()}else{this.loginInforNode.set("text",MWF.LP.desktop.login.loginWait);var s={credential:t.trim(),password:i};this.action.login(s,function(t){layout.desktop.session.user=t.data;var i=0-this.loginNode.getSize().y;new Fx.Morph(this.loginNode,{duration:200}).start({top:i}).chain(function(){this.loginNode.destroy();this.fireEvent("login")}.bind(this))}.bind(this),function(){this.loginInforNode.set("text",MWF.LP.desktop.login.loginError);this.errorEffect()}.bind(this))}},logout:function(){this.action.logout(function(){if(this.socket){this.socket.close();this.socket=null}Cookie.dispose("x-token",{domain:".ctc.com",path:"/"});window.location.reload()}.bind(this))}});