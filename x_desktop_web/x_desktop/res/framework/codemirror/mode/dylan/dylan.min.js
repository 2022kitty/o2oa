(function(e){if(typeof exports=="object"&&typeof module=="object")e(require("../../lib/codemirror"));else if(typeof define=="function"&&define.amd)define(["../../lib/codemirror"],e);else e(CodeMirror)})(function(e){"use strict";e.defineMode("dylan",function(e){var n={unnamedDefinition:["interface"],namedDefinition:["module","library","macro","C-struct","C-union","C-function","C-callable-wrapper"],typeParameterizedDefinition:["class","C-subtype","C-mapped-subtype"],otherParameterizedDefinition:["method","function","C-variable","C-address"],constantSimpleDefinition:["constant"],variableSimpleDefinition:["variable"],otherSimpleDefinition:["generic","domain","C-pointer-type","table"],statement:["if","block","begin","method","case","for","select","when","unless","until","while","iterate","profiling","dynamic-bind"],separator:["finally","exception","cleanup","else","elseif","afterwards"],other:["above","below","by","from","handler","in","instance","let","local","otherwise","slot","subclass","then","to","keyed-by","virtual"],signalingCalls:["signal","error","cerror","break","check-type","abort"]};n["otherDefinition"]=n["unnamedDefinition"].concat(n["namedDefinition"]).concat(n["otherParameterizedDefinition"]);n["definition"]=n["typeParameterizedDefinition"].concat(n["otherDefinition"]);n["parameterizedDefinition"]=n["typeParameterizedDefinition"].concat(n["otherParameterizedDefinition"]);n["simpleDefinition"]=n["constantSimpleDefinition"].concat(n["variableSimpleDefinition"]).concat(n["otherSimpleDefinition"]);n["keyword"]=n["statement"].concat(n["separator"]).concat(n["other"]);var t="[-_a-zA-Z?!*@<>$%]+";var i=new RegExp("^"+t);var r={symbolKeyword:t+":",symbolClass:"<"+t+">",symbolGlobal:"\\*"+t+"\\*",symbolConstant:"\\$"+t};var o={symbolKeyword:"atom",symbolClass:"tag",symbolGlobal:"variable-2",symbolConstant:"variable-3"};for(var a in r)if(r.hasOwnProperty(a))r[a]=new RegExp("^"+r[a]);r["keyword"]=[/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];var l={};l["keyword"]="keyword";l["definition"]="def";l["simpleDefinition"]="def";l["signalingCalls"]="builtin";var f={};var s={};["keyword","definition","simpleDefinition","signalingCalls"].forEach(function(e){n[e].forEach(function(n){f[n]=e;s[n]=l[e]})});function c(e,n,t){n.tokenize=t;return t(e,n)}var u,m;function d(e,n,t){u=e;m=t;return n}function b(e,n){var t=e.peek();if(t=="'"||t=='"'){e.next();return c(e,n,y(t,"string","string"))}else if(t=="/"){e.next();if(e.eat("*")){return c(e,n,p)}else if(e.eat("/")){e.skipToEnd();return d("comment","comment")}else{e.skipTo(" ");return d("operator","operator")}}else if(/\d/.test(t)){e.match(/^\d*(?:\.\d*)?(?:e[+\-]?\d+)?/);return d("number","number")}else if(t=="#"){e.next();t=e.peek();if(t=='"'){e.next();return c(e,n,y('"',"symbol","string-2"))}else if(t=="b"){e.next();e.eatWhile(/[01]/);return d("number","number")}else if(t=="x"){e.next();e.eatWhile(/[\da-f]/i);return d("number","number")}else if(t=="o"){e.next();e.eatWhile(/[0-7]/);return d("number","number")}else{e.eatWhile(/[-a-zA-Z]/);return d("hash","keyword")}}else if(e.match("end")){return d("end","keyword")}for(var a in r){if(r.hasOwnProperty(a)){var l=r[a];if(l instanceof Array&&l.some(function(n){return e.match(n)})||e.match(l))return d(a,o[a],e.current())}}if(e.match("define")){return d("definition","def")}else{e.eatWhile(/[\w\-]/);if(f[e.current()]){return d(f[e.current()],s[e.current()],e.current())}else if(e.current().match(i)){return d("variable","variable")}else{e.next();return d("other","variable-2")}}}function p(e,n){var t=false,i;while(i=e.next()){if(i=="/"&&t){n.tokenize=b;break}t=i=="*"}return d("comment","comment")}function y(e,n,t){return function(i,r){var o,a=false;while((o=i.next())!=null){if(o==e){a=true;break}}if(a)r.tokenize=b;return d(n,t)}}return{startState:function(){return{tokenize:b,currentIndent:0}},token:function(e,n){if(e.eatSpace())return null;var t=n.tokenize(e,n);return t},blockCommentStart:"/*",blockCommentEnd:"*/"}});e.defineMIME("text/x-dylan","dylan")});