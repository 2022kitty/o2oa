MWF.xApplication.OnlineMeeting=MWF.xApplication.OnlineMeeting||{};MWF.xApplication.OnlineMeeting.Actions=MWF.xApplication.OnlineMeeting.Actions||{};MWF.require("MWF.xDesktop.Actions.RestActions",null,false);MWF.xApplication.OnlineMeeting.Actions.RestActions=new Class({initialize:function(){this.action=new MWF.xDesktop.Actions.RestActions("/Actions/action.json","x_meeting_assemble_control","x_component_OnlineMeeting");this.actionAuth=new MWF.xDesktop.Actions.RestActions("/Actions/action.json","x_organization_assemble_authentication","x_component_OnlineMeeting")},getOpenMeeting:function(i,t,n){this.action.invoke({name:"getOpenMeeting",async:n,success:function(t){var n=t.data;var o="http://";o=n.host?o+n.host:o+window.location.host;o=!n.port||n.port==80?this.roomHost:o+":"+n.port;this.roomHost=o;if(i)i(t)}.bind(this),failure:t})},listRoom:function(i,t,n){this.action.invoke({name:"listRoom",async:n,success:i,failure:t})},addRoom:function(i,t,n,o){this.action.invoke({name:"addRoom",async:o,data:i,success:t,failure:n})},deleteRoom:function(i,t,n,o){this.action.invoke({name:"removeRoom",async:o,parameter:{id:i},success:t,failure:n})},getLoginUri:function(i){this.actionAuth.getActions();var t=this.actionAuth.actions["login"];var n=this.actionAuth.address+t.uri;par=this.roomHost+"/openmeetings/signin?oauthid="+i.oauth2Id;return n.replace(/{uri}/,escape(par))},getRoomUri:function(i){var t=this.roomHost+this.actionAuth.actions["room"].uri;return t.replace(/{id}/,i.id)}});